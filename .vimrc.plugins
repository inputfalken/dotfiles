if empty(glob('~/.vim/autoload/plug.vim'))
  silent !curl -fLo ~/.vim/autoload/plug.vim --create-dirs
    \ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
  autocmd VimEnter * PlugInstall | source $MYVIMRC
endif

call plug#begin('~/.vim/plugged')
Plug 'fsharp/vim-fsharp', {
      \ 'for': 'fsharp',
      \ 'do':  'make fsautocomplete',
      \}
Plug 'MaxMEllon/vim-jsx-pretty'
Plug 'OmniSharp/omnisharp-vim', { 'do': 'git clone https://github.com/OmniSharp/omnisharp-vim.git and; cd server and; msbuild and; ../omnisharp-roslyn/.build.sh' }
Plug 'PProvost/vim-ps1'
Plug 'SirVer/ultisnips'
Plug 'Valloric/YouCompleteMe', { 'do': './install.py --clang-completer --tern-completer' }
Plug 'christoomey/vim-tmux-navigator'
Plug 'ctrlpvim/ctrlp.vim'
Plug 'dag/vim-fish'
Plug 'elzr/vim-json'
Plug 'hail2u/vim-css3-syntax'
Plug 'honza/vim-snippets'
Plug 'junegunn/vim-easy-align'
Plug 'metakirby5/codi.vim'
Plug 'othree/csscomplete.vim'
Plug 'othree/html5.vim'
Plug 'pangloss/vim-javascript'
Plug 'plasticboy/vim-markdown'
Plug 'rafi/awesome-vim-colorschemes'
Plug 'rhysd/vim-gfm-syntax'
Plug 'robbles/logstash.vim'
Plug 'scrooloose/nerdtree', { 'on':  'NERDTreeToggle' }
Plug 'scrooloose/syntastic'
Plug 'ternjs/tern_for_vim', {'do': 'npm install'}
Plug 'tmux-plugins/vim-tmux'
Plug 'tpope/vim-dispatch'
Plug 'tpope/vim-fugitive'
Plug 'tpope/vim-surround'
Plug 'vim-jp/syntax-vim-ex'
call plug#end()
set background=dark
colorscheme solarized
"============================================================================
" UltiSnips
"============================================================================
let g:UltiSnipsExpandTrigger="<Tab>"
let g:UltiSnips_javascript = {
      \ 'keyword-spacing': 'always',
      \ 'semi': 'never',
      \ 'space-before-function-paren': 'always',
      \ }
"============================================================================
" YouCompleteMe
"============================================================================
let g:ycm_filetype_blacklist = {}
let g:ycm_key_invoke_completion = '<C-Space>'
let g:ycm_key_list_previous_completion = ['<Up>', '<c-p>']
let g:ycm_key_list_select_completion = ['<Down>', '<c-n>']
let g:ycm_use_ultisnips_completer = 1

"============================================================================
" Javascript
"============================================================================
let g:jsx_ext_required = 0 " Lets the repo mxw/vim-jsx be used for javascript extensions
autocmd FileType javascript noremap gd :TernDef<CR> " Go to definition with ternjs
autocmd FileType javascript noremap <leader>r :TernRename<CR>
"============================================================================
" Run nerdtree if a directory is targeted
"============================================================================
autocmd StdinReadPre * let s:std_in=1
autocmd VimEnter * if argc() == 1 && isdirectory(argv()[0]) && !exists("s:std_in") | exe 'NERDTree' argv()[0] | wincmd p | ene | endif
autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTree") && b:NERDTree.isTabTree()) | q | endif " Close vim if only nerdtree is open.
"============================================================================
" Load syntastic settings
"============================================================================
source $HOME/.vimrc.syntastic
